{"version":3,"file":"static/js/5334.9999f43a.chunk.js","mappings":"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","sources":["views/Payroll/Definitions/AdditionType/Components/additionTypeFormModal.js","views/Payroll/Definitions/AdditionType/index.js"],"sourcesContent":["import { Col, Form, Row } from 'antd';\r\nimport { FORM_NAMES } from 'constants/payroll';\r\nimport { DEFAULT_MSG, INPUT_TYPES } from 'constants/shared/common';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getDefinitionsAdvanceType } from 'services/api/actions/payroll/definitions/advanceTypes/advanceTypes.api';\r\nimport CustomModal from 'shared/components/CustomModal';\r\nimport FormElement from 'shared/controls/form';\r\nimport { InputField } from 'shared/controls/inputs/inputField';\r\nimport SwitchField from 'shared/controls/inputs/switch';\r\nimport { updatePageLoader } from 'store/actions/shared';\r\nimport { parseError } from 'utils/shared';\r\n\r\nconst AdditionTypeFormModal = ({ open, onCancel, selected, submitRecord, invalidateList }) => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n\r\n  const initialValues = {\r\n    description: '',\r\n    shortDescription: '',\r\n    minServiceMonth: '',\r\n    post: true,\r\n  };\r\n\r\n  const resetForm = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(updatePageLoader(true));\r\n    submitRecord\r\n      .mutateAsync(values)\r\n      .then(() => {\r\n        dispatch(updatePageLoader(false));\r\n        onCancel();\r\n      })\r\n      .catch(() => dispatch(updatePageLoader(false)));\r\n  };\r\n\r\n  const validateSubmit = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        values.post = values.post === true || values.post == 1 ? '1' : '0';\r\n        if (selected) values.id = selected.id;\r\n        onSubmit(values);\r\n      })\r\n      .catch(() => toast.error(DEFAULT_MSG.FormValidationMsg));\r\n  };\r\n\r\n  const loadData = (data) => {\r\n    form.setFields([\r\n      { name: 'description', value: data.description },\r\n      { name: 'shortDescription', value: data.shortDescription },\r\n      { name: 'minServiceMonth', value: data.minServiceMonth },\r\n      { name: 'post', value: data.post },\r\n    ]);\r\n  };\r\n\r\n  const getDetails = () => {\r\n    getDefinitionsAdvanceType(selected?.id)\r\n      .then((response) => {\r\n        dispatch(updatePageLoader(false));\r\n        loadData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(updatePageLoader(false));\r\n        toast.error(parseError(error));\r\n        invalidateList();\r\n        onCancel();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      resetForm();\r\n      if (selected) getDetails();\r\n    }\r\n  }, [open, selected]);\r\n\r\n  return (\r\n    <CustomModal\r\n      title={selected ? 'Edit Addition Type' : 'Add Addition Type'}\r\n      width={700}\r\n      open={open}\r\n      onCancel={onCancel}\r\n      onOk={validateSubmit}\r\n      okText=\"Submit\">\r\n      <FormElement\r\n        name={FORM_NAMES.PR_DEFINITIONS_ADVANCE_TYPE_FORM}\r\n        className=\"p-5\"\r\n        form={form}\r\n        initialValues={initialValues}>\r\n        <Row align=\"middle\" justify=\"space-between\">\r\n          <Col span={11}>\r\n            <InputField\r\n              label=\"Description\"\r\n              required\r\n              type={INPUT_TYPES.text}\r\n              name=\"description\"\r\n              messageLabel=\"description\"\r\n              placeholder=\"Enter description\"\r\n            />\r\n          </Col>\r\n\r\n          <Col span={11}>\r\n            <InputField\r\n              label=\"Short Description\"\r\n              required\r\n              type={INPUT_TYPES.text}\r\n              name=\"shortDescription\"\r\n              messageLabel=\"short description\"\r\n              placeholder=\"Enter short description\"\r\n            />\r\n          </Col>\r\n\r\n          <Col span={11}>\r\n            <InputField\r\n              label=\"Min. Service Month\"\r\n              required\r\n              type={INPUT_TYPES.number}\r\n              name=\"minServiceMonth\"\r\n              messageLabel=\"Min. Service Month\"\r\n              placeholder=\"Enter Min. Service Month\"\r\n              onlyNumbers\r\n              min={0}\r\n              max={12}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={11}>\r\n            <InputField\r\n              label=\"Description\"\r\n              required\r\n              type={INPUT_TYPES.text}\r\n              name=\"description\"\r\n              messageLabel=\"description\"\r\n              placeholder=\"Enter description\"\r\n            />\r\n          </Col>\r\n\r\n          <Col span={11}>\r\n            <SwitchField label=\"Active\" name=\"post\" />\r\n          </Col>\r\n        </Row>\r\n      </FormElement>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default AdditionTypeFormModal;\r\n","import { useState } from 'react';\r\nimport CustomTable from 'shared/controls/Table';\r\nimport SubHeader from 'shared/layout/subHeader';\r\nimport AdditionTypeFormModal from './Components/additionTypeFormModal';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport ActionMenu from 'shared/components/menu/actionMenu';\r\nimport { numberSorter, stringSorter } from 'utils/shared';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updatePageLoader } from 'store/actions/shared';\r\nimport CheckBox from 'shared/controls/inputs/checkBox';\r\nimport { useDesignationsAdvanceTypesQuery } from 'services/api/actions/payroll/definitions';\r\n\r\nconst AdditionType = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { getList, deleteRecords, submitRecord, invalidateList } =\r\n    useDesignationsAdvanceTypesQuery();\r\n  const resolvedData = getList.isError ? [] : getList?.data || [];\r\n\r\n  const [formModal, setFormModal] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n\r\n  const toggleModal = () => setFormModal((prevState) => !prevState);\r\n  const onSelect = (selectedRowIds) => setSelectedRows(selectedRowIds);\r\n\r\n  const onEdit = (record) => {\r\n    setSelected(record);\r\n    toggleModal();\r\n  };\r\n\r\n  const onAdd = () => {\r\n    setSelected(null);\r\n    toggleModal();\r\n  };\r\n\r\n  const deleteRows = (deleteIds) => {\r\n    dispatch(updatePageLoader(true));\r\n    deleteRecords\r\n      .mutateAsync(deleteIds)\r\n      .then(() => {\r\n        dispatch(updatePageLoader(false));\r\n        setSelectedRows([]);\r\n        setSelected(null);\r\n      })\r\n      .catch(() => dispatch(updatePageLoader(false)));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Code',\r\n      dataIndex: 'code',\r\n      sorter: (a, b) => numberSorter(a, b, 'code'),\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      sorter: (a, b) => stringSorter(a, b, 'description'),\r\n    },\r\n    {\r\n      title: 'Short Description',\r\n      dataIndex: 'shortDescription',\r\n      sorter: (a, b) => stringSorter(a, b, 'shortDescription'),\r\n    },\r\n    {\r\n      title: 'GL Code',\r\n      dataIndex: 'minServiceMonth',\r\n      sorter: (a, b) => numberSorter(a, b, 'minServiceMonth'),\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      sorter: (a, b) => stringSorter(a, b, 'description'),\r\n    },\r\n    {\r\n      title: 'Post',\r\n      dataIndex: 'post',\r\n      sorter: (a, b) => numberSorter(a, b, 'post'),\r\n      render: (_, record) => <CheckBox value={record?.post} controlled disabled />,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      render: (_, record) => {\r\n        return (\r\n          <ActionMenu\r\n            menu={true}\r\n            options={[\r\n              {\r\n                label: 'Edit',\r\n                buttonType: 'primary',\r\n                icon: <EditOutlined />,\r\n                onClick: () => onEdit(record),\r\n              },\r\n              {\r\n                label: 'Delete',\r\n                buttonType: 'danger',\r\n                icon: <DeleteOutlined />,\r\n                confirmAction: true,\r\n                onClick: () => deleteRows([record.id.toString()]),\r\n              },\r\n            ]}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      label: 'Add',\r\n      key: 'add',\r\n      onClick: onAdd,\r\n    },\r\n    {\r\n      label: 'Delete',\r\n      key: 'delete',\r\n      buttonType: 'danger',\r\n      confirmAction: true,\r\n      disabled: !selectedRows.length,\r\n      onClick: () => deleteRows(selectedRows.map((item) => item.toString())),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <AdditionTypeFormModal\r\n        open={formModal}\r\n        onCancel={toggleModal}\r\n        selected={selected}\r\n        submitRecord={submitRecord}\r\n        invalidateList={invalidateList}\r\n      />\r\n\r\n      <SubHeader name=\"Addition Type\" buttons={buttons} />\r\n      <div className=\"app_page_content\">\r\n        <CustomTable\r\n          rowKey=\"id\"\r\n          columns={columns}\r\n          data={resolvedData}\r\n          selectAble={true}\r\n          selectedRows={selectedRows}\r\n          onSelect={onSelect}\r\n          loading={getList.isLoading}\r\n          searchKeys={['code', 'description']}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdditionType;\r\n"],"names":["_ref","open","onCancel","selected","submitRecord","invalidateList","dispatch","useDispatch","_Form$useForm","Form","useForm","form","_slicedToArray","getDetails","getDefinitionsAdvanceType","id","then","response","data","updatePageLoader","setFields","name","value","description","shortDescription","minServiceMonth","post","catch","error","toast","parseError","useEffect","resetFields","_jsx","CustomModal","title","width","onOk","validateFields","values","mutateAsync","onSubmit","DEFAULT_MSG","FormValidationMsg","okText","children","FormElement","FORM_NAMES","PR_DEFINITIONS_ADVANCE_TYPE_FORM","className","initialValues","_jsxs","Row","align","justify","Col","span","InputField","label","required","type","INPUT_TYPES","text","messageLabel","placeholder","number","onlyNumbers","min","max","SwitchField","_useDesignationsAdvan","useDesignationsAdvanceTypesQuery","getList","deleteRecords","resolvedData","isError","_useState","useState","_useState2","formModal","setFormModal","_useState3","_useState4","setSelected","_useState5","_useState6","selectedRows","setSelectedRows","toggleModal","prevState","deleteRows","deleteIds","columns","dataIndex","sorter","a","b","numberSorter","stringSorter","render","_","record","CheckBox","controlled","disabled","ActionMenu","menu","options","buttonType","icon","EditOutlined","onClick","onEdit","DeleteOutlined","confirmAction","toString","buttons","key","length","map","item","_Fragment","AdditionTypeFormModal","SubHeader","CustomTable","rowKey","selectAble","onSelect","selectedRowIds","loading","isLoading","searchKeys"],"sourceRoot":""}