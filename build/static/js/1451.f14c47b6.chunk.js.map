{"version":3,"file":"static/js/1451.f14c47b6.chunk.js","mappings":"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","sources":["shared/components/searchField.js","shared/controls/Table.js","store/actions/shared/loader.js","services/api/actions/financial/userRights/books/userRightsBooks.api.js","services/api/actions/financial/userRights/queryKeys.js","services/api/actions/financial/userRights/books/useUserRightsBooks.query.js","views/Financial/UserRights/Books/Components/userRightBooksList.js","views/Financial/UserRights/Books/index.js"],"sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\r\nimport SearchInput from 'react-search-input';\r\n\r\nconst SearchField = ({ setSearch }) => {\r\n  const handleSearch = (text) => {\r\n    setSearch(text);\r\n  };\r\n  return (\r\n    <div className=\"custom_search_input_container\">\r\n      <div className=\"custom_search_input_content\">\r\n        <SearchInput className=\"custom_search_input px-5\" onChange={handleSearch} />\r\n        <SearchOutlined className=\"custom_search_icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import { Form, Input, InputNumber, Table } from 'antd';\r\nimport { useState } from 'react';\r\nimport Card from 'shared/components/card';\r\nimport SearchField from 'shared/components/searchField';\r\nimport { createFilter } from 'react-search-input';\r\nimport { resolveArray } from 'utils/shared/list';\r\n\r\nconst CustomTable = ({\r\n  columns = [],\r\n  data = [],\r\n  rowClassName = '',\r\n  loading = false,\r\n  selectAble = false,\r\n  selectedRows = [],\r\n  onSelect,\r\n  pagination = true,\r\n  current,\r\n  pageSize,\r\n  total,\r\n  pageSizeOptions = [10, 20, 50, 100],\r\n  onChange,\r\n  isEditing,\r\n  scrollX = 768,\r\n  scrollY = null,\r\n  searchAble = true,\r\n  searchKeys = [],\r\n  cardClassName, // ClassName for Parent Card\r\n  rowKey = 'OID',\r\n  selectionType = 'checkbox',\r\n  summary = () => {},\r\n}) => {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n  }) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item\r\n            name={dataIndex}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please Input ${title}!`,\r\n              },\r\n            ]}>\r\n            {inputNode}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  // const mergedColumns = columns.map((col) => {\r\n  //   if (!col.editable) {\r\n  //     return col;\r\n  //   }\r\n\r\n  //   return {\r\n  //     ...col,\r\n  //     onCell: (record) => ({\r\n  //       record,\r\n  //       inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n  //       dataIndex: col.dataIndex,\r\n  //       title: col.title,\r\n  //       editing: isEditing(record),\r\n  //     }),\r\n  //   };\r\n  // });\r\n\r\n  // const showTotal = () => {\r\n  //   return data?.length ?? 0;\r\n  // };\r\n\r\n  const searchedData = [...resolveArray(data)].filter(createFilter(searchText, searchKeys));\r\n\r\n  const scroll = {};\r\n  if (scrollX != null) scroll.x = scrollX;\r\n  if (scrollY != null) scroll.y = scrollY;\r\n\r\n  return (\r\n    <Card className={`table_card_container ${cardClassName}`}>\r\n      {searchAble && <SearchField setSearch={setSearchText} />}\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={searchedData}\r\n        rowClassName={rowClassName}\r\n        loading={loading}\r\n        rowKey={rowKey}\r\n        onChange={onChange}\r\n        rowSelection={\r\n          selectAble && {\r\n            selectedRows,\r\n            onChange: onSelect,\r\n            type: selectionType,\r\n            // selections: true,\r\n            selectedRowKeys: selectedRows,\r\n          }\r\n        }\r\n        scroll={scroll}\r\n        pagination={\r\n          pagination && {\r\n            total,\r\n            pageSize,\r\n            current,\r\n            showSizeChanger: true,\r\n            size: 'small',\r\n            pageSizeOptions,\r\n          }\r\n        }\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        summary={summary}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import { UPDATE_APP_LOADER, UPDATE_PAGE_LOADER } from '../../types';\r\n\r\nexport const updateAppLoader = (payload) => ({ type: UPDATE_APP_LOADER, payload });\r\nexport const updatePageLoader = (payload) => ({ type: UPDATE_PAGE_LOADER, payload });\r\n","import api from 'services/api';\r\nimport {\r\n  GET_USER_RIGHTS_ASSIGNED_BOOKS,\r\n  GET_USER_RIGHTS_USERS_LIST,\r\n  ADD_USER_RIGHTS_BOOK,\r\n} from 'services/api/endPoints/financial';\r\nimport { resolveArray } from 'utils/shared/list';\r\n\r\nexport const getUserRightsUsersList = async (organizationId) =>\r\n  await api\r\n    .get(`${GET_USER_RIGHTS_USERS_LIST}?organization_ID=${organizationId}`)\r\n    .then((response) => resolveArray(response.data));\r\n\r\nexport const getUserRightsBooksList = async (organizationId, userId) =>\r\n  userId\r\n    ? await api\r\n        .get(\r\n          `${GET_USER_RIGHTS_ASSIGNED_BOOKS}?organization_ID=${organizationId}&user_ID=${parseInt(\r\n            userId\r\n          )}`\r\n        )\r\n        .then((response) => resolveArray(response.data))\r\n    : [];\r\n\r\nexport const assignUserRightsBooks = async (body) => await api.post(ADD_USER_RIGHTS_BOOK, body);\r\n","export const FL_USER_RIGHTS_USERS_LIST = 'FL_USER_RIGHTS_USERS_LIST';\r\nexport const FL_USER_RIGHTS_BOOKS_LIST = 'FL_USER_RIGHTS_BOOKS_LIST';\r\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport {\r\n  getUserRightsBooksList,\r\n  getUserRightsUsersList,\r\n  assignUserRightsBooks,\r\n} from './userRightsBooks.api';\r\nimport { FL_USER_RIGHTS_USERS_LIST, FL_USER_RIGHTS_BOOKS_LIST } from '../queryKeys';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_MSG } from 'constants/shared/common';\r\nimport { useSelector } from 'react-redux';\r\nimport { parseError } from 'utils/shared';\r\n\r\nexport default function useUserRightsBooksQuery({\r\n  listKey = '',\r\n  userId = null,\r\n  loadUserList = true,\r\n}) {\r\n  const organization = useSelector((state) => state.configs.location);\r\n  const queryClient = useQueryClient();\r\n\r\n  const invalidateList = () => {\r\n    queryClient.invalidateQueries([FL_USER_RIGHTS_BOOKS_LIST]);\r\n    queryClient.invalidateQueries([FL_USER_RIGHTS_USERS_LIST]);\r\n  };\r\n\r\n  const refreshData = (msg) => {\r\n    invalidateList();\r\n    toast.success(msg);\r\n  };\r\n\r\n  const getUsersList = loadUserList\r\n    ? useQuery({\r\n        queryKey: [FL_USER_RIGHTS_USERS_LIST],\r\n        queryFn: () => getUserRightsUsersList(organization),\r\n        onError: (error) => toast.error(parseError(error)),\r\n      })\r\n    : [];\r\n\r\n  const getBooksList = useQuery({\r\n    queryKey: [FL_USER_RIGHTS_BOOKS_LIST, listKey],\r\n    queryFn: () => getUserRightsBooksList(organization, userId),\r\n    onError: (error) => toast.error(parseError(error)),\r\n  });\r\n\r\n  const assignBooks = useMutation({\r\n    mutationFn: (data) => assignUserRightsBooks({ ...data, organization_ID: organization }),\r\n    onSuccess: () => refreshData(DEFAULT_MSG.SaveMsg),\r\n    onError: (error) => toast.error(parseError(error)),\r\n  });\r\n\r\n  return {\r\n    getUsersList,\r\n    getBooksList,\r\n    assignBooks,\r\n  };\r\n}\r\n","import { useEffect } from 'react';\r\nimport CustomTable from 'shared/controls/Table';\r\nimport { numberSorter, stringSorter } from 'utils/shared';\r\nimport { useUserRightsBooksQuery } from 'services/api/actions/financial/userRights';\r\nimport { useConfigBooksQuery } from 'services/api/actions/financial/configurations';\r\n\r\nexport default function UserRightsBooksList({ userId, selectedBooks, setSelectedBooks }) {\r\n  const { getBooksList } = useUserRightsBooksQuery({\r\n    listKey: userId,\r\n    userId: userId,\r\n    loadUserList: false,\r\n  });\r\n  const { getList: getAllBooks } = useConfigBooksQuery();\r\n\r\n  const booksColumns = [\r\n    {\r\n      title: 'Code',\r\n      dataIndex: 'ST_BOOK_CODE',\r\n      sorter: (a, b) => numberSorter(a, b, 'ST_BOOK_CODE'),\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'ST_BOOK_DESC',\r\n      sorter: (a, b) => stringSorter(a, b, 'ST_BOOK_DESC'),\r\n    },\r\n  ];\r\n\r\n  const allBooks = getAllBooks.isError ? [] : getAllBooks?.data && userId ? getAllBooks?.data : [];\r\n\r\n  const assignedBooks = getBooksList.isError ? [] : getBooksList?.data || [];\r\n\r\n  const onSelect = (selectedRowIds) => setSelectedBooks(selectedRowIds);\r\n\r\n  useEffect(() => {\r\n    if (allBooks?.length > 0 && assignedBooks?.length > 0) {\r\n      const booksIds = assignedBooks?.map((item) => item.GL_BOOKS) ?? [];\r\n      setSelectedBooks(booksIds);\r\n    } else {\r\n      setSelectedBooks([]);\r\n    }\r\n  }, [getBooksList?.data, getAllBooks?.data]);\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <CustomTable\r\n        columns={booksColumns}\r\n        // data={data}\r\n        data={allBooks}\r\n        selectAble={true}\r\n        selectedRows={selectedBooks}\r\n        onSelect={onSelect}\r\n        loading={getBooksList.isLoading}\r\n        scrollY={200}\r\n        cardClassName=\"custom_table_card_user_accounts pt-2\"\r\n        // selectedRows={selectedRows}\r\n        // onSelect={onSelect}\r\n        searchKeys={['ST_BOOK_CODE', 'ST_BOOK_DESC']}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import CustomTable from 'shared/controls/Table';\r\nimport SubHeader from 'shared/layout/subHeader';\r\nimport { stringSorter } from 'utils/shared';\r\nimport { useUserRightsBooksQuery } from 'services/api/actions/financial/userRights';\r\nimport UserRightsBooksList from './Components/userRightBooksList';\r\nimport { useState } from 'react';\r\nimport { updatePageLoader } from 'store/actions/shared';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function Books() {\r\n  const { getUsersList, assignBooks } = useUserRightsBooksQuery({\r\n    listKey: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [selectedBooks, setSelectedBooks] = useState([]);\r\n\r\n  const handleSelect = (record, selected, selectedRows, nativeEvent) => {\r\n    setSelectedUser(selected?.[0]?.OID);\r\n  };\r\n\r\n  const accountsColumns = [\r\n    {\r\n      dataIndex: 'key',\r\n      rowScope: 'row',\r\n      width: 50,\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'user_name',\r\n      sorter: (a, b) => stringSorter(a, b, 'user_name'),\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      sorter: (a, b) => stringSorter(a, b, 'email'),\r\n    },\r\n  ];\r\n\r\n  const handleUpdate = () => {\r\n    const data = {\r\n      book_ids: selectedBooks,\r\n      action: 'update',\r\n      user_ID: selectedUser,\r\n    };\r\n    dispatch(updatePageLoader(true));\r\n    assignBooks\r\n      .mutateAsync(data)\r\n      .then(() => {\r\n        dispatch(updatePageLoader(false));\r\n        setSelectedBooks([]);\r\n        // setSelected(null);\r\n      })\r\n      .catch(() => dispatch(updatePageLoader(false)));\r\n  };\r\n\r\n  const buttons = [\r\n    {\r\n      label: 'Update',\r\n      key: 'update',\r\n      onClick: () => handleUpdate(),\r\n      disabled: !selectedUser,\r\n    },\r\n  ];\r\n\r\n  const usersData = getUsersList.isError ? [] : getUsersList?.data || [];\r\n\r\n  return (\r\n    <>\r\n      <SubHeader name=\"Books\" buttons={buttons} />\r\n      <div className=\"app_page_content user_accounts_container\">\r\n        <CustomTable\r\n          columns={accountsColumns}\r\n          data={usersData}\r\n          selectAble={true}\r\n          loading={getUsersList.isLoading}\r\n          selectionType=\"radio\"\r\n          onSelect={handleSelect}\r\n          selectedRows={[selectedUser]}\r\n          scrollY={200}\r\n          cardClassName=\"custom_table_card_user_accounts\"\r\n          searchKeys={['user_name', 'email']}\r\n        />\r\n        <UserRightsBooksList\r\n          userId={selectedUser}\r\n          selectedBooks={selectedBooks}\r\n          setSelectedBooks={setSelectedBooks}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["_ref","setSearch","_jsx","className","children","_jsxs","SearchInput","onChange","text","SearchOutlined","_ref$columns","columns","_ref$data","data","_ref$rowClassName","rowClassName","_ref$loading","loading","_ref$selectAble","selectAble","_ref$selectedRows","selectedRows","onSelect","_ref$pagination","pagination","current","pageSize","total","_ref$pageSizeOptions","pageSizeOptions","_ref$scrollX","isEditing","scrollX","_ref$scrollY","scrollY","_ref$searchAble","searchAble","_ref$searchKeys","searchKeys","cardClassName","_ref$rowKey","rowKey","_ref$selectionType","selectionType","_ref$summary","summary","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","searchedData","_toConsumableArray","resolveArray","filter","createFilter","scroll","x","y","Card","concat","SearchField","Table","dataSource","rowSelection","type","selectedRowKeys","showSizeChanger","size","components","body","cell","_ref2","editing","dataIndex","title","inputType","record","index","restProps","_objectWithoutProperties","_excluded","inputNode","InputNumber","Input","_objectSpread","Form","Item","name","style","margin","rules","required","message","updatePageLoader","payload","UPDATE_PAGE_LOADER","getUserRightsUsersList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","organizationId","wrap","_context","prev","next","api","get","GET_USER_RIGHTS_USERS_LIST","then","response","abrupt","sent","stop","_x","apply","arguments","getUserRightsBooksList","_callee2","userId","_context2","GET_USER_RIGHTS_ASSIGNED_BOOKS","parseInt","t0","_x2","_x3","assignUserRightsBooks","_ref3","_callee3","_context3","post","ADD_USER_RIGHTS_BOOK","_x4","FL_USER_RIGHTS_USERS_LIST","FL_USER_RIGHTS_BOOKS_LIST","useUserRightsBooksQuery","_ref$listKey","listKey","_ref$userId","_ref$loadUserList","loadUserList","organization","useSelector","state","configs","location","queryClient","useQueryClient","refreshData","msg","invalidateQueries","toast","success","getUsersList","useQuery","queryKey","queryFn","onError","error","parseError","getBooksList","assignBooks","useMutation","mutationFn","organization_ID","onSuccess","DEFAULT_MSG","SaveMsg","UserRightsBooksList","selectedBooks","setSelectedBooks","getAllBooks","useConfigBooksQuery","getList","booksColumns","sorter","a","b","numberSorter","stringSorter","allBooks","isError","assignedBooks","useEffect","length","_assignedBooks$map","booksIds","map","item","GL_BOOKS","CustomTable","selectedRowIds","isLoading","Books","_useUserRightsBooksQu","dispatch","useDispatch","selectedUser","setSelectedUser","_useState3","_useState4","accountsColumns","rowScope","width","buttons","label","key","onClick","book_ids","action","user_ID","mutateAsync","catch","handleUpdate","disabled","usersData","_Fragment","SubHeader","selected","nativeEvent","_selected$","OID"],"sourceRoot":""}